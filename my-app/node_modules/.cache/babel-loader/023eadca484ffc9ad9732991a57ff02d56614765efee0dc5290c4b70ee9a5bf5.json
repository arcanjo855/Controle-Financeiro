{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repositorios\\\\trabalho\\\\controleFinanceiro\\\\my-app\\\\src\\\\components\\\\Grid\\\\index.tsx\";\nimport React from \"react\";\nimport GridItem from \"../GridItem\";\nimport * as C from \"./styles\";\n\n// Definindo tipos para as props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  itens,\n  setItens\n}) => {\n  const onDelete = ID => {\n    const newArray = itens.filter(transaction => transaction.id !== ID);\n    setItens(newArray);\n    localStorage.setItem(\"transations\", JSON.stringify(newArray));\n  };\n  return /*#__PURE__*/_jsxDEV(C.Table, {\n    children: [/*#__PURE__*/_jsxDEV(C.Thead, {\n      children: /*#__PURE__*/_jsxDEV(C.Tr, {\n        children: [/*#__PURE__*/_jsxDEV(C.Th, {\n          width: 40,\n          children: \"Descricao\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.Th, {\n          width: 40,\n          children: \"valor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.Th, {\n          width: 10,\n          alignCenter: true,\n          children: \"Tipo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.Th, {\n          width: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C.Tbody, {\n      children: itens === null || itens === void 0 ? void 0 : itens.map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n        item: item,\n        onDelete: onDelete\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","GridItem","C","jsxDEV","_jsxDEV","Grid","itens","setItens","onDelete","ID","newArray","filter","transaction","id","localStorage","setItem","JSON","stringify","Table","children","Thead","Tr","Th","width","fileName","_jsxFileName","lineNumber","columnNumber","alignCenter","Tbody","map","item","index","_c","$RefreshReg$"],"sources":["C:/Repositorios/trabalho/controleFinanceiro/my-app/src/components/Grid/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport GridItem from \"../GridItem\";\r\nimport * as C from \"./styles\";\r\n\r\n// Definindo tipos para as props\r\ninterface GridProps {\r\n  itens: {\r\n    id: number;\r\n    desc: string;\r\n    amount: number;\r\n    expense: boolean;\r\n  }[];\r\n  setItens: React.Dispatch<React.SetStateAction<any[]>>;\r\n}\r\n\r\nconst Grid: React.FC<GridProps> = ({ itens, setItens }) => {\r\n  const onDelete = (ID: number): void => {\r\n    const newArray = itens.filter((transaction) => transaction.id !== ID);\r\n    setItens(newArray);\r\n    localStorage.setItem(\"transations\", JSON.stringify(newArray));\r\n  };\r\n\r\n  return (\r\n    <C.Table>\r\n      <C.Thead>\r\n        <C.Tr>\r\n          <C.Th width={40}>Descricao</C.Th>\r\n          <C.Th width={40}>valor</C.Th>\r\n          <C.Th width={10} alignCenter>\r\n            Tipo\r\n          </C.Th>\r\n          <C.Th width={10}></C.Th>\r\n        </C.Tr>\r\n      </C.Thead>\r\n      <C.Tbody>\r\n        {itens?.map((item, index) => (\r\n          <GridItem key={index} item={item} onDelete={onDelete} />\r\n        ))}\r\n      </C.Tbody>\r\n    </C.Table>\r\n  );\r\n};\r\n\r\nexport default Grid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAO,KAAKC,CAAC,MAAM,UAAU;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWA,MAAMC,IAAyB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACzD,MAAMC,QAAQ,GAAIC,EAAU,IAAW;IACrC,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAM,CAAEC,WAAW,IAAKA,WAAW,CAACC,EAAE,KAAKJ,EAAE,CAAC;IACrEF,QAAQ,CAACG,QAAQ,CAAC;IAClBI,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,CAAC;EAC/D,CAAC;EAED,oBACEN,OAAA,CAACF,CAAC,CAACgB,KAAK;IAAAC,QAAA,gBACNf,OAAA,CAACF,CAAC,CAACkB,KAAK;MAAAD,QAAA,eACNf,OAAA,CAACF,CAAC,CAACmB,EAAE;QAAAF,QAAA,gBACHf,OAAA,CAACF,CAAC,CAACoB,EAAE;UAACC,KAAK,EAAE,EAAG;UAAAJ,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjCvB,OAAA,CAACF,CAAC,CAACoB,EAAE;UAACC,KAAK,EAAE,EAAG;UAAAJ,QAAA,EAAC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7BvB,OAAA,CAACF,CAAC,CAACoB,EAAE;UAACC,KAAK,EAAE,EAAG;UAACK,WAAW;UAAAT,QAAA,EAAC;QAE7B;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPvB,OAAA,CAACF,CAAC,CAACoB,EAAE;UAACC,KAAK,EAAE;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACVvB,OAAA,CAACF,CAAC,CAAC2B,KAAK;MAAAV,QAAA,EACLb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB5B,OAAA,CAACH,QAAQ;QAAa8B,IAAI,EAAEA,IAAK;QAACvB,QAAQ,EAAEA;MAAS,GAAtCwB,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACM,EAAA,GA1BI5B,IAAyB;AA4B/B,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}